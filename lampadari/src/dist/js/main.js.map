{"version":3,"sources":["main.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","popupToggle","popupOverlay","popupWindow","popupCloseButton","slideToggle","slideToggleIcon","slideList","dropdownToggle","dropdownMenu","hamburgerToggle","navMenu","document","querySelector","addEventListener","classList","add","remove","currentLink","window","location","pathname","links","querySelectorAll","link","getAttribute","highlightNav","type","autoplay","animationDuration","hoverpause","gap","mount","contains","block","style","height","slideDown","blockHeight","scrollHeight","slideUp","toggle","@glidejs/glide","2","global","factory","this","defaults","startAt","perView","focusAt","keyboard","bound","swipeThreshold","dragThreshold","perTouch","touchRatio","touchAngle","rewind","rewindDuration","animationTimingFunc","throttle","direction","peek","breakpoints","classes","ltr","rtl","slider","carousel","swipeable","dragging","cloneSlide","activeNav","activeSlide","disabledArrow","warn","msg","console","error","classCallCheck","instance","Constructor","TypeError","_typeof","Symbol","iterator","obj","constructor","prototype","createClass","protoProps","staticProps","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_extends","assign","arguments","source","hasOwnProperty","toInt","value","parseInt","isString","isObject","isFunction","isUndefined","isArray","Array","define","prop","definition","mergeOptions","settings","options","EventsBus","event","handler","on","hop","events","index","push","context","emit","forEach","item","undefined","Glide","extensions","_e","_c","glide","components","name","_name","transformers","_t","pattern","Run","make","distance","Transition","disable","Move","interval","disabled","get","_o","set","_i","_d","status","selector","now","Date","getTime","func","wait","timeout","args","result","previous","later","leading","apply","throttled","at","remaining","clearTimeout","trailing","setTimeout","cancel","MARGIN_TYPE","siblings","node","parentNode","firstChild","matched","nextSibling","nodeType","exist","HTMLElement","TRACK_SELECTOR","EventsBinder","el","closure","capture","listeners","removeEventListener","VALID_DIRECTIONS","FLIPED_MOVEMENTS",">","<","=","Rtl","Components","modify","translate","Direction","is","mutator","Events","TRANSFORMERS","Gaps","Clones","grow","Peek","before","width","Sizes","slideWidth","concat","mutate","transformer","supportsPassive","opts","supportsPassive$1","START_EVENTS","MOVE_EVENTS","END_EVENTS","MOUSE_EVENTS","sortBreakpoints","points","keys","sort","reduce","k","sortKeys","COMPONENTS","Html","root","track","slides","slice","wrapper","children","filter","slide","_r","Translate","transform","isType","isOffset","after","movement","compose","property","duration","transition","callback","enable","offset","resolve","token","split","join","addClass","removeClass","_v","indexOf","setupSlides","setupWrapper","dimention","wrapperSize","offsetWidth","reductor","len","marginLeft","marginRight","_this","items","collect","_Glide$settings","part","start","end","Math","max","floor","clone","cloneNode","_clone","unshift","append","_Components$Html","half","prepend","reverse","appendChild","_i2","insertBefore","_i3","removeChild","Resize","Binder","bind","unbind","off","destroy","Build","typeClass","activeClass","sibling","removeClasses","move","calculate","isStart","isEnd","steps","countableSteps","isNumber","min","_m","step","substr","Swipe","swipeSin","swipeStartX","swipeStartY","passive","bindSwipeStart","swipe","touches","pageX","pageY","bindSwipeMove","bindSwipeEnd","subExSx","subEySy","powEX","abs","powEY","swipeHypotenuse","sqrt","swipeCathetus","asin","PI","stopPropagation","parseFloat","toFloat","threshold","swipeDistance","swipeDeg","round","unbindSwipeMove","unbindSwipeEnd","unbindSwipeStart","_this2","_this3","changedTouches","Images","dragstart","preventDefault","Anchors","detached","prevented","_a","click","detach","draggable","setAttribute","removeAttribute","attach","Controls","_n","addBindings","setActive","removeActive","controls","removeBindings","elements","currentTarget","Keyboard","press","keyCode","Autoplay","setInterval","stop","time","clearInterval","Breakpoints","match","matchMedia","point","matches","Glide$$1","self","ReferenceError","possibleConstructorReturn","__proto__","getPrototypeOf","subClass","superClass","create","setPrototypeOf","inherits","object","receiver","Function","desc","getOwnPropertyDescriptor","parent","getter","amd"],"mappings":"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","file":"main.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict'; // window.onresize = function(){ location.reload(); }\n\npopupWindow();\nhighlightNav();\nglideSlider();\nslidingBlock();\ndrodownMenu();\nhamburgerMenu();\n\nfunction highlightNav() {\n  var currentLink = window.location.pathname;\n  var links = document.querySelectorAll('.menu__link');\n\n  for (var i = 0; i < links.length; i++) {\n    var link = links[i];\n\n    if (link.getAttribute('href') == currentLink) {\n      link.classList.add('menu__link_current');\n    }\n  }\n\n  ;\n}\n\n;\n\nfunction popupWindow() {\n  var popupToggle = document.querySelector('.popup-toggle');\n  var popupOverlay = document.querySelector('.popup-overlay');\n  var popupWindow = document.querySelector('.popup-window');\n  var popupCloseButton = document.querySelector('.popup-window__close-button');\n  popupToggle.addEventListener(\"click\", function () {\n    popupOverlay.classList.add('active');\n    popupWindow.classList.add('active');\n  });\n  popupOverlay.addEventListener(\"click\", function () {\n    popupOverlay.classList.remove('active');\n    popupWindow.classList.remove('active');\n  });\n  popupCloseButton.addEventListener(\"click\", function () {\n    popupOverlay.classList.remove('active');\n    popupWindow.classList.remove('active');\n  });\n}\n\n;\n\nfunction glideSlider() {\n  var Glide = require('@glidejs/glide');\n\n  var glide = new Glide('.glide-slider', {\n    type: 'carousel',\n    autoplay: 5000,\n    animationDuration: 2000,\n    hoverpause: false,\n    gap: 0\n  });\n  glide.mount();\n}\n\n;\n\nfunction slideUp(block) {\n  var blockHeight = block.scrollHeight;\n  block.classList.add('open');\n  block.style.height = blockHeight + 'px';\n}\n\n;\n\nfunction slideDown(block) {\n  block.classList.remove('open');\n  block.style.height = null;\n}\n\n;\n\nfunction slidingBlock() {\n  var slideToggle = document.querySelector('.sliding-block__toggle');\n  var slideToggleIcon = document.querySelector('.sliding-block__toggle-icon');\n  var slideList = document.querySelector('.sliding-block__list');\n  slideToggle.addEventListener(\"click\", function () {\n    if (slideList.classList.contains('open')) {\n      slideToggleIcon.classList.remove('active');\n      slideDown(slideList);\n    } else {\n      slideToggleIcon.classList.add('active');\n      slideUp(slideList);\n    }\n  });\n}\n\n;\n\nfunction drodownMenu() {\n  var dropdownToggle = document.querySelector('.dropdown__toggle');\n  var dropdownMenu = document.querySelector('.dropdown__menu');\n  dropdownToggle.addEventListener(\"click\", function () {\n    dropdownToggle.classList.toggle('active');\n    dropdownMenu.classList.toggle('visible');\n  });\n}\n\n;\n\nfunction hamburgerMenu() {\n  var hamburgerToggle = document.querySelector('.hamburger');\n  var navMenu = document.querySelector('.menu');\n  hamburgerToggle.addEventListener(\"click\", function () {\n    if (hamburgerToggle.classList.contains('is-active')) {\n      hamburgerToggle.classList.remove('is-active');\n      navMenu.classList.remove('collapsed');\n    } else {\n      hamburgerToggle.classList.add('is-active');\n      navMenu.classList.add('collapsed');\n    }\n  });\n}\n\n;\n\n},{\"@glidejs/glide\":2}],2:[function(require,module,exports){\n/*!\n * Glide.js v3.4.1\n * (c) 2013-2019 Jędrzej Chałubek <jedrzej.chalubek@gmail.com> (http://jedrzejchalubek.com/)\n * Released under the MIT License.\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Glide = factory());\n}(this, (function () { 'use strict';\n\n  var defaults = {\n    /**\n     * Type of the movement.\n     *\n     * Available types:\n     * `slider` - Rewinds slider to the start/end when it reaches the first or last slide.\n     * `carousel` - Changes slides without starting over when it reaches the first or last slide.\n     *\n     * @type {String}\n     */\n    type: 'slider',\n\n    /**\n     * Start at specific slide number defined with zero-based index.\n     *\n     * @type {Number}\n     */\n    startAt: 0,\n\n    /**\n     * A number of slides visible on the single viewport.\n     *\n     * @type {Number}\n     */\n    perView: 1,\n\n    /**\n     * Focus currently active slide at a specified position in the track.\n     *\n     * Available inputs:\n     * `center` - Current slide will be always focused at the center of a track.\n     * `0,1,2,3...` - Current slide will be focused on the specified zero-based index.\n     *\n     * @type {String|Number}\n     */\n    focusAt: 0,\n\n    /**\n     * A size of the gap added between slides.\n     *\n     * @type {Number}\n     */\n    gap: 10,\n\n    /**\n     * Change slides after a specified interval. Use `false` for turning off autoplay.\n     *\n     * @type {Number|Boolean}\n     */\n    autoplay: false,\n\n    /**\n     * Stop autoplay on mouseover event.\n     *\n     * @type {Boolean}\n     */\n    hoverpause: true,\n\n    /**\n     * Allow for changing slides with left and right keyboard arrows.\n     *\n     * @type {Boolean}\n     */\n    keyboard: true,\n\n    /**\n     * Stop running `perView` number of slides from the end. Use this\n     * option if you don't want to have an empty space after\n     * a slider. Works only with `slider` type and a\n     * non-centered `focusAt` setting.\n     *\n     * @type {Boolean}\n     */\n    bound: false,\n\n    /**\n     * Minimal swipe distance needed to change the slide. Use `false` for turning off a swiping.\n     *\n     * @type {Number|Boolean}\n     */\n    swipeThreshold: 80,\n\n    /**\n     * Minimal mouse drag distance needed to change the slide. Use `false` for turning off a dragging.\n     *\n     * @type {Number|Boolean}\n     */\n    dragThreshold: 120,\n\n    /**\n     * A maximum number of slides to which movement will be made on swiping or dragging. Use `false` for unlimited.\n     *\n     * @type {Number|Boolean}\n     */\n    perTouch: false,\n\n    /**\n     * Moving distance ratio of the slides on a swiping and dragging.\n     *\n     * @type {Number}\n     */\n    touchRatio: 0.5,\n\n    /**\n     * Angle required to activate slides moving on swiping or dragging.\n     *\n     * @type {Number}\n     */\n    touchAngle: 45,\n\n    /**\n     * Duration of the animation in milliseconds.\n     *\n     * @type {Number}\n     */\n    animationDuration: 400,\n\n    /**\n     * Allows looping the `slider` type. Slider will rewind to the first/last slide when it's at the start/end.\n     *\n     * @type {Boolean}\n     */\n    rewind: true,\n\n    /**\n     * Duration of the rewinding animation of the `slider` type in milliseconds.\n     *\n     * @type {Number}\n     */\n    rewindDuration: 800,\n\n    /**\n     * Easing function for the animation.\n     *\n     * @type {String}\n     */\n    animationTimingFunc: 'cubic-bezier(.165, .840, .440, 1)',\n\n    /**\n     * Throttle costly events at most once per every wait milliseconds.\n     *\n     * @type {Number}\n     */\n    throttle: 10,\n\n    /**\n     * Moving direction mode.\n     *\n     * Available inputs:\n     * - 'ltr' - left to right movement,\n     * - 'rtl' - right to left movement.\n     *\n     * @type {String}\n     */\n    direction: 'ltr',\n\n    /**\n     * The distance value of the next and previous viewports which\n     * have to peek in the current view. Accepts number and\n     * pixels as a string. Left and right peeking can be\n     * set up separately with a directions object.\n     *\n     * For example:\n     * `100` - Peek 100px on the both sides.\n     * { before: 100, after: 50 }` - Peek 100px on the left side and 50px on the right side.\n     *\n     * @type {Number|String|Object}\n     */\n    peek: 0,\n\n    /**\n     * Collection of options applied at specified media breakpoints.\n     * For example: display two slides per view under 800px.\n     * `{\n     *   '800px': {\n     *     perView: 2\n     *   }\n     * }`\n     */\n    breakpoints: {},\n\n    /**\n     * Collection of internally used HTML classes.\n     *\n     * @todo Refactor `slider` and `carousel` properties to single `type: { slider: '', carousel: '' }` object\n     * @type {Object}\n     */\n    classes: {\n      direction: {\n        ltr: 'glide--ltr',\n        rtl: 'glide--rtl'\n      },\n      slider: 'glide--slider',\n      carousel: 'glide--carousel',\n      swipeable: 'glide--swipeable',\n      dragging: 'glide--dragging',\n      cloneSlide: 'glide__slide--clone',\n      activeNav: 'glide__bullet--active',\n      activeSlide: 'glide__slide--active',\n      disabledArrow: 'glide__arrow--disabled'\n    }\n  };\n\n  /**\n   * Outputs warning message to the bowser console.\n   *\n   * @param  {String} msg\n   * @return {Void}\n   */\n  function warn(msg) {\n    console.error(\"[Glide warn]: \" + msg);\n  }\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n\n  var classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n\n  var createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  var get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent === null) {\n        return undefined;\n      } else {\n        return get(parent, property, receiver);\n      }\n    } else if (\"value\" in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n\n      if (getter === undefined) {\n        return undefined;\n      }\n\n      return getter.call(receiver);\n    }\n  };\n\n  var inherits = function (subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  };\n\n  var possibleConstructorReturn = function (self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  };\n\n  /**\n   * Converts value entered as number\n   * or string to integer value.\n   *\n   * @param {String} value\n   * @returns {Number}\n   */\n  function toInt(value) {\n    return parseInt(value);\n  }\n\n  /**\n   * Converts value entered as number\n   * or string to flat value.\n   *\n   * @param {String} value\n   * @returns {Number}\n   */\n  function toFloat(value) {\n    return parseFloat(value);\n  }\n\n  /**\n   * Indicates whether the specified value is a string.\n   *\n   * @param  {*}   value\n   * @return {Boolean}\n   */\n  function isString(value) {\n    return typeof value === 'string';\n  }\n\n  /**\n   * Indicates whether the specified value is an object.\n   *\n   * @param  {*} value\n   * @return {Boolean}\n   *\n   * @see https://github.com/jashkenas/underscore\n   */\n  function isObject(value) {\n    var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);\n\n    return type === 'function' || type === 'object' && !!value; // eslint-disable-line no-mixed-operators\n  }\n\n  /**\n   * Indicates whether the specified value is a number.\n   *\n   * @param  {*} value\n   * @return {Boolean}\n   */\n  function isNumber(value) {\n    return typeof value === 'number';\n  }\n\n  /**\n   * Indicates whether the specified value is a function.\n   *\n   * @param  {*} value\n   * @return {Boolean}\n   */\n  function isFunction(value) {\n    return typeof value === 'function';\n  }\n\n  /**\n   * Indicates whether the specified value is undefined.\n   *\n   * @param  {*} value\n   * @return {Boolean}\n   */\n  function isUndefined(value) {\n    return typeof value === 'undefined';\n  }\n\n  /**\n   * Indicates whether the specified value is an array.\n   *\n   * @param  {*} value\n   * @return {Boolean}\n   */\n  function isArray(value) {\n    return value.constructor === Array;\n  }\n\n  /**\n   * Creates and initializes specified collection of extensions.\n   * Each extension receives access to instance of glide and rest of components.\n   *\n   * @param {Object} glide\n   * @param {Object} extensions\n   *\n   * @returns {Object}\n   */\n  function mount(glide, extensions, events) {\n    var components = {};\n\n    for (var name in extensions) {\n      if (isFunction(extensions[name])) {\n        components[name] = extensions[name](glide, components, events);\n      } else {\n        warn('Extension must be a function');\n      }\n    }\n\n    for (var _name in components) {\n      if (isFunction(components[_name].mount)) {\n        components[_name].mount();\n      }\n    }\n\n    return components;\n  }\n\n  /**\n   * Defines getter and setter property on the specified object.\n   *\n   * @param  {Object} obj         Object where property has to be defined.\n   * @param  {String} prop        Name of the defined property.\n   * @param  {Object} definition  Get and set definitions for the property.\n   * @return {Void}\n   */\n  function define(obj, prop, definition) {\n    Object.defineProperty(obj, prop, definition);\n  }\n\n  /**\n   * Sorts aphabetically object keys.\n   *\n   * @param  {Object} obj\n   * @return {Object}\n   */\n  function sortKeys(obj) {\n    return Object.keys(obj).sort().reduce(function (r, k) {\n      r[k] = obj[k];\n\n      return r[k], r;\n    }, {});\n  }\n\n  /**\n   * Merges passed settings object with default options.\n   *\n   * @param  {Object} defaults\n   * @param  {Object} settings\n   * @return {Object}\n   */\n  function mergeOptions(defaults, settings) {\n    var options = _extends({}, defaults, settings);\n\n    // `Object.assign` do not deeply merge objects, so we\n    // have to do it manually for every nested object\n    // in options. Although it does not look smart,\n    // it's smaller and faster than some fancy\n    // merging deep-merge algorithm script.\n    if (settings.hasOwnProperty('classes')) {\n      options.classes = _extends({}, defaults.classes, settings.classes);\n\n      if (settings.classes.hasOwnProperty('direction')) {\n        options.classes.direction = _extends({}, defaults.classes.direction, settings.classes.direction);\n      }\n    }\n\n    if (settings.hasOwnProperty('breakpoints')) {\n      options.breakpoints = _extends({}, defaults.breakpoints, settings.breakpoints);\n    }\n\n    return options;\n  }\n\n  var EventsBus = function () {\n    /**\n     * Construct a EventBus instance.\n     *\n     * @param {Object} events\n     */\n    function EventsBus() {\n      var events = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      classCallCheck(this, EventsBus);\n\n      this.events = events;\n      this.hop = events.hasOwnProperty;\n    }\n\n    /**\n     * Adds listener to the specifed event.\n     *\n     * @param {String|Array} event\n     * @param {Function} handler\n     */\n\n\n    createClass(EventsBus, [{\n      key: 'on',\n      value: function on(event, handler) {\n        if (isArray(event)) {\n          for (var i = 0; i < event.length; i++) {\n            this.on(event[i], handler);\n          }\n        }\n\n        // Create the event's object if not yet created\n        if (!this.hop.call(this.events, event)) {\n          this.events[event] = [];\n        }\n\n        // Add the handler to queue\n        var index = this.events[event].push(handler) - 1;\n\n        // Provide handle back for removal of event\n        return {\n          remove: function remove() {\n            delete this.events[event][index];\n          }\n        };\n      }\n\n      /**\n       * Runs registered handlers for specified event.\n       *\n       * @param {String|Array} event\n       * @param {Object=} context\n       */\n\n    }, {\n      key: 'emit',\n      value: function emit(event, context) {\n        if (isArray(event)) {\n          for (var i = 0; i < event.length; i++) {\n            this.emit(event[i], context);\n          }\n        }\n\n        // If the event doesn't exist, or there's no handlers in queue, just leave\n        if (!this.hop.call(this.events, event)) {\n          return;\n        }\n\n        // Cycle through events queue, fire!\n        this.events[event].forEach(function (item) {\n          item(context || {});\n        });\n      }\n    }]);\n    return EventsBus;\n  }();\n\n  var Glide = function () {\n    /**\r\n     * Construct glide.\r\n     *\r\n     * @param  {String} selector\r\n     * @param  {Object} options\r\n     */\n    function Glide(selector) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      classCallCheck(this, Glide);\n\n      this._c = {};\n      this._t = [];\n      this._e = new EventsBus();\n\n      this.disabled = false;\n      this.selector = selector;\n      this.settings = mergeOptions(defaults, options);\n      this.index = this.settings.startAt;\n    }\n\n    /**\r\n     * Initializes glide.\r\n     *\r\n     * @param {Object} extensions Collection of extensions to initialize.\r\n     * @return {Glide}\r\n     */\n\n\n    createClass(Glide, [{\n      key: 'mount',\n      value: function mount$$1() {\n        var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        this._e.emit('mount.before');\n\n        if (isObject(extensions)) {\n          this._c = mount(this, extensions, this._e);\n        } else {\n          warn('You need to provide a object on `mount()`');\n        }\n\n        this._e.emit('mount.after');\n\n        return this;\n      }\n\n      /**\r\n       * Collects an instance `translate` transformers.\r\n       *\r\n       * @param  {Array} transformers Collection of transformers.\r\n       * @return {Void}\r\n       */\n\n    }, {\n      key: 'mutate',\n      value: function mutate() {\n        var transformers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n        if (isArray(transformers)) {\n          this._t = transformers;\n        } else {\n          warn('You need to provide a array on `mutate()`');\n        }\n\n        return this;\n      }\n\n      /**\r\n       * Updates glide with specified settings.\r\n       *\r\n       * @param {Object} settings\r\n       * @return {Glide}\r\n       */\n\n    }, {\n      key: 'update',\n      value: function update() {\n        var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        this.settings = mergeOptions(this.settings, settings);\n\n        if (settings.hasOwnProperty('startAt')) {\n          this.index = settings.startAt;\n        }\n\n        this._e.emit('update');\n\n        return this;\n      }\n\n      /**\r\n       * Change slide with specified pattern. A pattern must be in the special format:\r\n       * `>` - Move one forward\r\n       * `<` - Move one backward\r\n       * `={i}` - Go to {i} zero-based slide (eq. '=1', will go to second slide)\r\n       * `>>` - Rewinds to end (last slide)\r\n       * `<<` - Rewinds to start (first slide)\r\n       *\r\n       * @param {String} pattern\r\n       * @return {Glide}\r\n       */\n\n    }, {\n      key: 'go',\n      value: function go(pattern) {\n        this._c.Run.make(pattern);\n\n        return this;\n      }\n\n      /**\r\n       * Move track by specified distance.\r\n       *\r\n       * @param {String} distance\r\n       * @return {Glide}\r\n       */\n\n    }, {\n      key: 'move',\n      value: function move(distance) {\n        this._c.Transition.disable();\n        this._c.Move.make(distance);\n\n        return this;\n      }\n\n      /**\r\n       * Destroy instance and revert all changes done by this._c.\r\n       *\r\n       * @return {Glide}\r\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this._e.emit('destroy');\n\n        return this;\n      }\n\n      /**\r\n       * Start instance autoplaying.\r\n       *\r\n       * @param {Boolean|Number} interval Run autoplaying with passed interval regardless of `autoplay` settings\r\n       * @return {Glide}\r\n       */\n\n    }, {\n      key: 'play',\n      value: function play() {\n        var interval = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n        if (interval) {\n          this.settings.autoplay = interval;\n        }\n\n        this._e.emit('play');\n\n        return this;\n      }\n\n      /**\r\n       * Stop instance autoplaying.\r\n       *\r\n       * @return {Glide}\r\n       */\n\n    }, {\n      key: 'pause',\n      value: function pause() {\n        this._e.emit('pause');\n\n        return this;\n      }\n\n      /**\r\n       * Sets glide into a idle status.\r\n       *\r\n       * @return {Glide}\r\n       */\n\n    }, {\n      key: 'disable',\n      value: function disable() {\n        this.disabled = true;\n\n        return this;\n      }\n\n      /**\r\n       * Sets glide into a active status.\r\n       *\r\n       * @return {Glide}\r\n       */\n\n    }, {\n      key: 'enable',\n      value: function enable() {\n        this.disabled = false;\n\n        return this;\n      }\n\n      /**\r\n       * Adds cuutom event listener with handler.\r\n       *\r\n       * @param  {String|Array} event\r\n       * @param  {Function} handler\r\n       * @return {Glide}\r\n       */\n\n    }, {\n      key: 'on',\n      value: function on(event, handler) {\n        this._e.on(event, handler);\n\n        return this;\n      }\n\n      /**\r\n       * Checks if glide is a precised type.\r\n       *\r\n       * @param  {String} name\r\n       * @return {Boolean}\r\n       */\n\n    }, {\n      key: 'isType',\n      value: function isType(name) {\n        return this.settings.type === name;\n      }\n\n      /**\r\n       * Gets value of the core options.\r\n       *\r\n       * @return {Object}\r\n       */\n\n    }, {\n      key: 'settings',\n      get: function get$$1() {\n        return this._o;\n      }\n\n      /**\r\n       * Sets value of the core options.\r\n       *\r\n       * @param  {Object} o\r\n       * @return {Void}\r\n       */\n      ,\n      set: function set$$1(o) {\n        if (isObject(o)) {\n          this._o = o;\n        } else {\n          warn('Options must be an `object` instance.');\n        }\n      }\n\n      /**\r\n       * Gets current index of the slider.\r\n       *\r\n       * @return {Object}\r\n       */\n\n    }, {\n      key: 'index',\n      get: function get$$1() {\n        return this._i;\n      }\n\n      /**\r\n       * Sets current index a slider.\r\n       *\r\n       * @return {Object}\r\n       */\n      ,\n      set: function set$$1(i) {\n        this._i = toInt(i);\n      }\n\n      /**\r\n       * Gets type name of the slider.\r\n       *\r\n       * @return {String}\r\n       */\n\n    }, {\n      key: 'type',\n      get: function get$$1() {\n        return this.settings.type;\n      }\n\n      /**\r\n       * Gets value of the idle status.\r\n       *\r\n       * @return {Boolean}\r\n       */\n\n    }, {\n      key: 'disabled',\n      get: function get$$1() {\n        return this._d;\n      }\n\n      /**\r\n       * Sets value of the idle status.\r\n       *\r\n       * @return {Boolean}\r\n       */\n      ,\n      set: function set$$1(status) {\n        this._d = !!status;\n      }\n    }]);\n    return Glide;\n  }();\n\n  function Run (Glide, Components, Events) {\n    var Run = {\n      /**\n       * Initializes autorunning of the glide.\n       *\n       * @return {Void}\n       */\n      mount: function mount() {\n        this._o = false;\n      },\n\n\n      /**\n       * Makes glides running based on the passed moving schema.\n       *\n       * @param {String} move\n       */\n      make: function make(move) {\n        var _this = this;\n\n        if (!Glide.disabled) {\n          Glide.disable();\n\n          this.move = move;\n\n          Events.emit('run.before', this.move);\n\n          this.calculate();\n\n          Events.emit('run', this.move);\n\n          Components.Transition.after(function () {\n            if (_this.isStart()) {\n              Events.emit('run.start', _this.move);\n            }\n\n            if (_this.isEnd()) {\n              Events.emit('run.end', _this.move);\n            }\n\n            if (_this.isOffset('<') || _this.isOffset('>')) {\n              _this._o = false;\n\n              Events.emit('run.offset', _this.move);\n            }\n\n            Events.emit('run.after', _this.move);\n\n            Glide.enable();\n          });\n        }\n      },\n\n\n      /**\n       * Calculates current index based on defined move.\n       *\n       * @return {Void}\n       */\n      calculate: function calculate() {\n        var move = this.move,\n            length = this.length;\n        var steps = move.steps,\n            direction = move.direction;\n\n\n        var countableSteps = isNumber(toInt(steps)) && toInt(steps) !== 0;\n\n        switch (direction) {\n          case '>':\n            if (steps === '>') {\n              Glide.index = length;\n            } else if (this.isEnd()) {\n              if (!(Glide.isType('slider') && !Glide.settings.rewind)) {\n                this._o = true;\n\n                Glide.index = 0;\n              }\n            } else if (countableSteps) {\n              Glide.index += Math.min(length - Glide.index, -toInt(steps));\n            } else {\n              Glide.index++;\n            }\n            break;\n\n          case '<':\n            if (steps === '<') {\n              Glide.index = 0;\n            } else if (this.isStart()) {\n              if (!(Glide.isType('slider') && !Glide.settings.rewind)) {\n                this._o = true;\n\n                Glide.index = length;\n              }\n            } else if (countableSteps) {\n              Glide.index -= Math.min(Glide.index, toInt(steps));\n            } else {\n              Glide.index--;\n            }\n            break;\n\n          case '=':\n            Glide.index = steps;\n            break;\n\n          default:\n            warn('Invalid direction pattern [' + direction + steps + '] has been used');\n            break;\n        }\n      },\n\n\n      /**\n       * Checks if we are on the first slide.\n       *\n       * @return {Boolean}\n       */\n      isStart: function isStart() {\n        return Glide.index === 0;\n      },\n\n\n      /**\n       * Checks if we are on the last slide.\n       *\n       * @return {Boolean}\n       */\n      isEnd: function isEnd() {\n        return Glide.index === this.length;\n      },\n\n\n      /**\n       * Checks if we are making a offset run.\n       *\n       * @param {String} direction\n       * @return {Boolean}\n       */\n      isOffset: function isOffset(direction) {\n        return this._o && this.move.direction === direction;\n      }\n    };\n\n    define(Run, 'move', {\n      /**\n       * Gets value of the move schema.\n       *\n       * @returns {Object}\n       */\n      get: function get() {\n        return this._m;\n      },\n\n\n      /**\n       * Sets value of the move schema.\n       *\n       * @returns {Object}\n       */\n      set: function set(value) {\n        var step = value.substr(1);\n\n        this._m = {\n          direction: value.substr(0, 1),\n          steps: step ? toInt(step) ? toInt(step) : step : 0\n        };\n      }\n    });\n\n    define(Run, 'length', {\n      /**\n       * Gets value of the running distance based\n       * on zero-indexing number of slides.\n       *\n       * @return {Number}\n       */\n      get: function get() {\n        var settings = Glide.settings;\n        var length = Components.Html.slides.length;\n\n        // If the `bound` option is acitve, a maximum running distance should be\n        // reduced by `perView` and `focusAt` settings. Running distance\n        // should end before creating an empty space after instance.\n\n        if (Glide.isType('slider') && settings.focusAt !== 'center' && settings.bound) {\n          return length - 1 - (toInt(settings.perView) - 1) + toInt(settings.focusAt);\n        }\n\n        return length - 1;\n      }\n    });\n\n    define(Run, 'offset', {\n      /**\n       * Gets status of the offsetting flag.\n       *\n       * @return {Boolean}\n       */\n      get: function get() {\n        return this._o;\n      }\n    });\n\n    return Run;\n  }\n\n  /**\n   * Returns a current time.\n   *\n   * @return {Number}\n   */\n  function now() {\n    return new Date().getTime();\n  }\n\n  /**\n   * Returns a function, that, when invoked, will only be triggered\n   * at most once during a given window of time.\n   *\n   * @param {Function} func\n   * @param {Number} wait\n   * @param {Object=} options\n   * @return {Function}\n   *\n   * @see https://github.com/jashkenas/underscore\n   */\n  function throttle(func, wait, options) {\n    var timeout = void 0,\n        context = void 0,\n        args = void 0,\n        result = void 0;\n    var previous = 0;\n    if (!options) options = {};\n\n    var later = function later() {\n      previous = options.leading === false ? 0 : now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n\n    var throttled = function throttled() {\n      var at = now();\n      if (!previous && options.leading === false) previous = at;\n      var remaining = wait - (at - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = at;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n\n    throttled.cancel = function () {\n      clearTimeout(timeout);\n      previous = 0;\n      timeout = context = args = null;\n    };\n\n    return throttled;\n  }\n\n  var MARGIN_TYPE = {\n    ltr: ['marginLeft', 'marginRight'],\n    rtl: ['marginRight', 'marginLeft']\n  };\n\n  function Gaps (Glide, Components, Events) {\n    var Gaps = {\n      /**\n       * Applies gaps between slides. First and last\n       * slides do not receive it's edge margins.\n       *\n       * @param {HTMLCollection} slides\n       * @return {Void}\n       */\n      apply: function apply(slides) {\n        for (var i = 0, len = slides.length; i < len; i++) {\n          var style = slides[i].style;\n          var direction = Components.Direction.value;\n\n          if (i !== 0) {\n            style[MARGIN_TYPE[direction][0]] = this.value / 2 + 'px';\n          } else {\n            style[MARGIN_TYPE[direction][0]] = '';\n          }\n\n          if (i !== slides.length - 1) {\n            style[MARGIN_TYPE[direction][1]] = this.value / 2 + 'px';\n          } else {\n            style[MARGIN_TYPE[direction][1]] = '';\n          }\n        }\n      },\n\n\n      /**\n       * Removes gaps from the slides.\n       *\n       * @param {HTMLCollection} slides\n       * @returns {Void}\n      */\n      remove: function remove(slides) {\n        for (var i = 0, len = slides.length; i < len; i++) {\n          var style = slides[i].style;\n\n          style.marginLeft = '';\n          style.marginRight = '';\n        }\n      }\n    };\n\n    define(Gaps, 'value', {\n      /**\n       * Gets value of the gap.\n       *\n       * @returns {Number}\n       */\n      get: function get() {\n        return toInt(Glide.settings.gap);\n      }\n    });\n\n    define(Gaps, 'grow', {\n      /**\n       * Gets additional dimentions value caused by gaps.\n       * Used to increase width of the slides wrapper.\n       *\n       * @returns {Number}\n       */\n      get: function get() {\n        return Gaps.value * (Components.Sizes.length - 1);\n      }\n    });\n\n    define(Gaps, 'reductor', {\n      /**\n       * Gets reduction value caused by gaps.\n       * Used to subtract width of the slides.\n       *\n       * @returns {Number}\n       */\n      get: function get() {\n        var perView = Glide.settings.perView;\n\n        return Gaps.value * (perView - 1) / perView;\n      }\n    });\n\n    /**\n     * Apply calculated gaps:\n     * - after building, so slides (including clones) will receive proper margins\n     * - on updating via API, to recalculate gaps with new options\n     */\n    Events.on(['build.after', 'update'], throttle(function () {\n      Gaps.apply(Components.Html.wrapper.children);\n    }, 30));\n\n    /**\n     * Remove gaps:\n     * - on destroying to bring markup to its inital state\n     */\n    Events.on('destroy', function () {\n      Gaps.remove(Components.Html.wrapper.children);\n    });\n\n    return Gaps;\n  }\n\n  /**\n   * Finds siblings nodes of the passed node.\n   *\n   * @param  {Element} node\n   * @return {Array}\n   */\n  function siblings(node) {\n    if (node && node.parentNode) {\n      var n = node.parentNode.firstChild;\n      var matched = [];\n\n      for (; n; n = n.nextSibling) {\n        if (n.nodeType === 1 && n !== node) {\n          matched.push(n);\n        }\n      }\n\n      return matched;\n    }\n\n    return [];\n  }\n\n  /**\n   * Checks if passed node exist and is a valid element.\n   *\n   * @param  {Element} node\n   * @return {Boolean}\n   */\n  function exist(node) {\n    if (node && node instanceof window.HTMLElement) {\n      return true;\n    }\n\n    return false;\n  }\n\n  var TRACK_SELECTOR = '[data-glide-el=\"track\"]';\n\n  function Html (Glide, Components) {\n    var Html = {\n      /**\n       * Setup slider HTML nodes.\n       *\n       * @param {Glide} glide\n       */\n      mount: function mount() {\n        this.root = Glide.selector;\n        this.track = this.root.querySelector(TRACK_SELECTOR);\n        this.slides = Array.prototype.slice.call(this.wrapper.children).filter(function (slide) {\n          return !slide.classList.contains(Glide.settings.classes.cloneSlide);\n        });\n      }\n    };\n\n    define(Html, 'root', {\n      /**\n       * Gets node of the glide main element.\n       *\n       * @return {Object}\n       */\n      get: function get() {\n        return Html._r;\n      },\n\n\n      /**\n       * Sets node of the glide main element.\n       *\n       * @return {Object}\n       */\n      set: function set(r) {\n        if (isString(r)) {\n          r = document.querySelector(r);\n        }\n\n        if (exist(r)) {\n          Html._r = r;\n        } else {\n          warn('Root element must be a existing Html node');\n        }\n      }\n    });\n\n    define(Html, 'track', {\n      /**\n       * Gets node of the glide track with slides.\n       *\n       * @return {Object}\n       */\n      get: function get() {\n        return Html._t;\n      },\n\n\n      /**\n       * Sets node of the glide track with slides.\n       *\n       * @return {Object}\n       */\n      set: function set(t) {\n        if (exist(t)) {\n          Html._t = t;\n        } else {\n          warn('Could not find track element. Please use ' + TRACK_SELECTOR + ' attribute.');\n        }\n      }\n    });\n\n    define(Html, 'wrapper', {\n      /**\n       * Gets node of the slides wrapper.\n       *\n       * @return {Object}\n       */\n      get: function get() {\n        return Html.track.children[0];\n      }\n    });\n\n    return Html;\n  }\n\n  function Peek (Glide, Components, Events) {\n    var Peek = {\n      /**\n       * Setups how much to peek based on settings.\n       *\n       * @return {Void}\n       */\n      mount: function mount() {\n        this.value = Glide.settings.peek;\n      }\n    };\n\n    define(Peek, 'value', {\n      /**\n       * Gets value of the peek.\n       *\n       * @returns {Number|Object}\n       */\n      get: function get() {\n        return Peek._v;\n      },\n\n\n      /**\n       * Sets value of the peek.\n       *\n       * @param {Number|Object} value\n       * @return {Void}\n       */\n      set: function set(value) {\n        if (isObject(value)) {\n          value.before = toInt(value.before);\n          value.after = toInt(value.after);\n        } else {\n          value = toInt(value);\n        }\n\n        Peek._v = value;\n      }\n    });\n\n    define(Peek, 'reductor', {\n      /**\n       * Gets reduction value caused by peek.\n       *\n       * @returns {Number}\n       */\n      get: function get() {\n        var value = Peek.value;\n        var perView = Glide.settings.perView;\n\n        if (isObject(value)) {\n          return value.before / perView + value.after / perView;\n        }\n\n        return value * 2 / perView;\n      }\n    });\n\n    /**\n     * Recalculate peeking sizes on:\n     * - when resizing window to update to proper percents\n     */\n    Events.on(['resize', 'update'], function () {\n      Peek.mount();\n    });\n\n    return Peek;\n  }\n\n  function Move (Glide, Components, Events) {\n    var Move = {\n      /**\n       * Constructs move component.\n       *\n       * @returns {Void}\n       */\n      mount: function mount() {\n        this._o = 0;\n      },\n\n\n      /**\n       * Calculates a movement value based on passed offset and currently active index.\n       *\n       * @param  {Number} offset\n       * @return {Void}\n       */\n      make: function make() {\n        var _this = this;\n\n        var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n        this.offset = offset;\n\n        Events.emit('move', {\n          movement: this.value\n        });\n\n        Components.Transition.after(function () {\n          Events.emit('move.after', {\n            movement: _this.value\n          });\n        });\n      }\n    };\n\n    define(Move, 'offset', {\n      /**\n       * Gets an offset value used to modify current translate.\n       *\n       * @return {Object}\n       */\n      get: function get() {\n        return Move._o;\n      },\n\n\n      /**\n       * Sets an offset value used to modify current translate.\n       *\n       * @return {Object}\n       */\n      set: function set(value) {\n        Move._o = !isUndefined(value) ? toInt(value) : 0;\n      }\n    });\n\n    define(Move, 'translate', {\n      /**\n       * Gets a raw movement value.\n       *\n       * @return {Number}\n       */\n      get: function get() {\n        return Components.Sizes.slideWidth * Glide.index;\n      }\n    });\n\n    define(Move, 'value', {\n      /**\n       * Gets an actual movement value corrected by offset.\n       *\n       * @return {Number}\n       */\n      get: function get() {\n        var offset = this.offset;\n        var translate = this.translate;\n\n        if (Components.Direction.is('rtl')) {\n          return translate + offset;\n        }\n\n        return translate - offset;\n      }\n    });\n\n    /**\n     * Make movement to proper slide on:\n     * - before build, so glide will start at `startAt` index\n     * - on each standard run to move to newly calculated index\n     */\n    Events.on(['build.before', 'run'], function () {\n      Move.make();\n    });\n\n    return Move;\n  }\n\n  function Sizes (Glide, Components, Events) {\n    var Sizes = {\n      /**\n       * Setups dimentions of slides.\n       *\n       * @return {Void}\n       */\n      setupSlides: function setupSlides() {\n        var width = this.slideWidth + 'px';\n        var slides = Components.Html.slides;\n\n        for (var i = 0; i < slides.length; i++) {\n          slides[i].style.width = width;\n        }\n      },\n\n\n      /**\n       * Setups dimentions of slides wrapper.\n       *\n       * @return {Void}\n       */\n      setupWrapper: function setupWrapper(dimention) {\n        Components.Html.wrapper.style.width = this.wrapperSize + 'px';\n      },\n\n\n      /**\n       * Removes applied styles from HTML elements.\n       *\n       * @returns {Void}\n       */\n      remove: function remove() {\n        var slides = Components.Html.slides;\n\n        for (var i = 0; i < slides.length; i++) {\n          slides[i].style.width = '';\n        }\n\n        Components.Html.wrapper.style.width = '';\n      }\n    };\n\n    define(Sizes, 'length', {\n      /**\n       * Gets count number of the slides.\n       *\n       * @return {Number}\n       */\n      get: function get() {\n        return Components.Html.slides.length;\n      }\n    });\n\n    define(Sizes, 'width', {\n      /**\n       * Gets width value of the glide.\n       *\n       * @return {Number}\n       */\n      get: function get() {\n        return Components.Html.root.offsetWidth;\n      }\n    });\n\n    define(Sizes, 'wrapperSize', {\n      /**\n       * Gets size of the slides wrapper.\n       *\n       * @return {Number}\n       */\n      get: function get() {\n        return Sizes.slideWidth * Sizes.length + Components.Gaps.grow + Components.Clones.grow;\n      }\n    });\n\n    define(Sizes, 'slideWidth', {\n      /**\n       * Gets width value of the single slide.\n       *\n       * @return {Number}\n       */\n      get: function get() {\n        return Sizes.width / Glide.settings.perView - Components.Peek.reductor - Components.Gaps.reductor;\n      }\n    });\n\n    /**\n     * Apply calculated glide's dimensions:\n     * - before building, so other dimentions (e.g. translate) will be calculated propertly\n     * - when resizing window to recalculate sildes dimensions\n     * - on updating via API, to calculate dimensions based on new options\n     */\n    Events.on(['build.before', 'resize', 'update'], function () {\n      Sizes.setupSlides();\n      Sizes.setupWrapper();\n    });\n\n    /**\n     * Remove calculated glide's dimensions:\n     * - on destoting to bring markup to its inital state\n     */\n    Events.on('destroy', function () {\n      Sizes.remove();\n    });\n\n    return Sizes;\n  }\n\n  function Build (Glide, Components, Events) {\n    var Build = {\n      /**\n       * Init glide building. Adds classes, sets\n       * dimensions and setups initial state.\n       *\n       * @return {Void}\n       */\n      mount: function mount() {\n        Events.emit('build.before');\n\n        this.typeClass();\n        this.activeClass();\n\n        Events.emit('build.after');\n      },\n\n\n      /**\n       * Adds `type` class to the glide element.\n       *\n       * @return {Void}\n       */\n      typeClass: function typeClass() {\n        Components.Html.root.classList.add(Glide.settings.classes[Glide.settings.type]);\n      },\n\n\n      /**\n       * Sets active class to current slide.\n       *\n       * @return {Void}\n       */\n      activeClass: function activeClass() {\n        var classes = Glide.settings.classes;\n        var slide = Components.Html.slides[Glide.index];\n\n        if (slide) {\n          slide.classList.add(classes.activeSlide);\n\n          siblings(slide).forEach(function (sibling) {\n            sibling.classList.remove(classes.activeSlide);\n          });\n        }\n      },\n\n\n      /**\n       * Removes HTML classes applied at building.\n       *\n       * @return {Void}\n       */\n      removeClasses: function removeClasses() {\n        var classes = Glide.settings.classes;\n\n        Components.Html.root.classList.remove(classes[Glide.settings.type]);\n\n        Components.Html.slides.forEach(function (sibling) {\n          sibling.classList.remove(classes.activeSlide);\n        });\n      }\n    };\n\n    /**\n     * Clear building classes:\n     * - on destroying to bring HTML to its initial state\n     * - on updating to remove classes before remounting component\n     */\n    Events.on(['destroy', 'update'], function () {\n      Build.removeClasses();\n    });\n\n    /**\n     * Remount component:\n     * - on resizing of the window to calculate new dimentions\n     * - on updating settings via API\n     */\n    Events.on(['resize', 'update'], function () {\n      Build.mount();\n    });\n\n    /**\n     * Swap active class of current slide:\n     * - after each move to the new index\n     */\n    Events.on('move.after', function () {\n      Build.activeClass();\n    });\n\n    return Build;\n  }\n\n  function Clones (Glide, Components, Events) {\n    var Clones = {\n      /**\n       * Create pattern map and collect slides to be cloned.\n       */\n      mount: function mount() {\n        this.items = [];\n\n        if (Glide.isType('carousel')) {\n          this.items = this.collect();\n        }\n      },\n\n\n      /**\n       * Collect clones with pattern.\n       *\n       * @return {Void}\n       */\n      collect: function collect() {\n        var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n        var slides = Components.Html.slides;\n        var _Glide$settings = Glide.settings,\n            perView = _Glide$settings.perView,\n            classes = _Glide$settings.classes;\n\n\n        var peekIncrementer = +!!Glide.settings.peek;\n        var part = perView + peekIncrementer;\n        var start = slides.slice(0, part);\n        var end = slides.slice(-part);\n\n        for (var r = 0; r < Math.max(1, Math.floor(perView / slides.length)); r++) {\n          for (var i = 0; i < start.length; i++) {\n            var clone = start[i].cloneNode(true);\n\n            clone.classList.add(classes.cloneSlide);\n\n            items.push(clone);\n          }\n\n          for (var _i = 0; _i < end.length; _i++) {\n            var _clone = end[_i].cloneNode(true);\n\n            _clone.classList.add(classes.cloneSlide);\n\n            items.unshift(_clone);\n          }\n        }\n\n        return items;\n      },\n\n\n      /**\n       * Append cloned slides with generated pattern.\n       *\n       * @return {Void}\n       */\n      append: function append() {\n        var items = this.items;\n        var _Components$Html = Components.Html,\n            wrapper = _Components$Html.wrapper,\n            slides = _Components$Html.slides;\n\n\n        var half = Math.floor(items.length / 2);\n        var prepend = items.slice(0, half).reverse();\n        var append = items.slice(half, items.length);\n        var width = Components.Sizes.slideWidth + 'px';\n\n        for (var i = 0; i < append.length; i++) {\n          wrapper.appendChild(append[i]);\n        }\n\n        for (var _i2 = 0; _i2 < prepend.length; _i2++) {\n          wrapper.insertBefore(prepend[_i2], slides[0]);\n        }\n\n        for (var _i3 = 0; _i3 < items.length; _i3++) {\n          items[_i3].style.width = width;\n        }\n      },\n\n\n      /**\n       * Remove all cloned slides.\n       *\n       * @return {Void}\n       */\n      remove: function remove() {\n        var items = this.items;\n\n\n        for (var i = 0; i < items.length; i++) {\n          Components.Html.wrapper.removeChild(items[i]);\n        }\n      }\n    };\n\n    define(Clones, 'grow', {\n      /**\n       * Gets additional dimentions value caused by clones.\n       *\n       * @return {Number}\n       */\n      get: function get() {\n        return (Components.Sizes.slideWidth + Components.Gaps.value) * Clones.items.length;\n      }\n    });\n\n    /**\n     * Append additional slide's clones:\n     * - while glide's type is `carousel`\n     */\n    Events.on('update', function () {\n      Clones.remove();\n      Clones.mount();\n      Clones.append();\n    });\n\n    /**\n     * Append additional slide's clones:\n     * - while glide's type is `carousel`\n     */\n    Events.on('build.before', function () {\n      if (Glide.isType('carousel')) {\n        Clones.append();\n      }\n    });\n\n    /**\n     * Remove clones HTMLElements:\n     * - on destroying, to bring HTML to its initial state\n     */\n    Events.on('destroy', function () {\n      Clones.remove();\n    });\n\n    return Clones;\n  }\n\n  var EventsBinder = function () {\n    /**\n     * Construct a EventsBinder instance.\n     */\n    function EventsBinder() {\n      var listeners = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      classCallCheck(this, EventsBinder);\n\n      this.listeners = listeners;\n    }\n\n    /**\n     * Adds events listeners to arrows HTML elements.\n     *\n     * @param  {String|Array} events\n     * @param  {Element|Window|Document} el\n     * @param  {Function} closure\n     * @param  {Boolean|Object} capture\n     * @return {Void}\n     */\n\n\n    createClass(EventsBinder, [{\n      key: 'on',\n      value: function on(events, el, closure) {\n        var capture = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n        if (isString(events)) {\n          events = [events];\n        }\n\n        for (var i = 0; i < events.length; i++) {\n          this.listeners[events[i]] = closure;\n\n          el.addEventListener(events[i], this.listeners[events[i]], capture);\n        }\n      }\n\n      /**\n       * Removes event listeners from arrows HTML elements.\n       *\n       * @param  {String|Array} events\n       * @param  {Element|Window|Document} el\n       * @param  {Boolean|Object} capture\n       * @return {Void}\n       */\n\n    }, {\n      key: 'off',\n      value: function off(events, el) {\n        var capture = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        if (isString(events)) {\n          events = [events];\n        }\n\n        for (var i = 0; i < events.length; i++) {\n          el.removeEventListener(events[i], this.listeners[events[i]], capture);\n        }\n      }\n\n      /**\n       * Destroy collected listeners.\n       *\n       * @returns {Void}\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        delete this.listeners;\n      }\n    }]);\n    return EventsBinder;\n  }();\n\n  function Resize (Glide, Components, Events) {\n    /**\n     * Instance of the binder for DOM Events.\n     *\n     * @type {EventsBinder}\n     */\n    var Binder = new EventsBinder();\n\n    var Resize = {\n      /**\n       * Initializes window bindings.\n       */\n      mount: function mount() {\n        this.bind();\n      },\n\n\n      /**\n       * Binds `rezsize` listener to the window.\n       * It's a costly event, so we are debouncing it.\n       *\n       * @return {Void}\n       */\n      bind: function bind() {\n        Binder.on('resize', window, throttle(function () {\n          Events.emit('resize');\n        }, Glide.settings.throttle));\n      },\n\n\n      /**\n       * Unbinds listeners from the window.\n       *\n       * @return {Void}\n       */\n      unbind: function unbind() {\n        Binder.off('resize', window);\n      }\n    };\n\n    /**\n     * Remove bindings from window:\n     * - on destroying, to remove added EventListener\n     */\n    Events.on('destroy', function () {\n      Resize.unbind();\n      Binder.destroy();\n    });\n\n    return Resize;\n  }\n\n  var VALID_DIRECTIONS = ['ltr', 'rtl'];\n  var FLIPED_MOVEMENTS = {\n    '>': '<',\n    '<': '>',\n    '=': '='\n  };\n\n  function Direction (Glide, Components, Events) {\n    var Direction = {\n      /**\n       * Setups gap value based on settings.\n       *\n       * @return {Void}\n       */\n      mount: function mount() {\n        this.value = Glide.settings.direction;\n      },\n\n\n      /**\n       * Resolves pattern based on direction value\n       *\n       * @param {String} pattern\n       * @returns {String}\n       */\n      resolve: function resolve(pattern) {\n        var token = pattern.slice(0, 1);\n\n        if (this.is('rtl')) {\n          return pattern.split(token).join(FLIPED_MOVEMENTS[token]);\n        }\n\n        return pattern;\n      },\n\n\n      /**\n       * Checks value of direction mode.\n       *\n       * @param {String} direction\n       * @returns {Boolean}\n       */\n      is: function is(direction) {\n        return this.value === direction;\n      },\n\n\n      /**\n       * Applies direction class to the root HTML element.\n       *\n       * @return {Void}\n       */\n      addClass: function addClass() {\n        Components.Html.root.classList.add(Glide.settings.classes.direction[this.value]);\n      },\n\n\n      /**\n       * Removes direction class from the root HTML element.\n       *\n       * @return {Void}\n       */\n      removeClass: function removeClass() {\n        Components.Html.root.classList.remove(Glide.settings.classes.direction[this.value]);\n      }\n    };\n\n    define(Direction, 'value', {\n      /**\n       * Gets value of the direction.\n       *\n       * @returns {Number}\n       */\n      get: function get() {\n        return Direction._v;\n      },\n\n\n      /**\n       * Sets value of the direction.\n       *\n       * @param {String} value\n       * @return {Void}\n       */\n      set: function set(value) {\n        if (VALID_DIRECTIONS.indexOf(value) > -1) {\n          Direction._v = value;\n        } else {\n          warn('Direction value must be `ltr` or `rtl`');\n        }\n      }\n    });\n\n    /**\n     * Clear direction class:\n     * - on destroy to bring HTML to its initial state\n     * - on update to remove class before reappling bellow\n     */\n    Events.on(['destroy', 'update'], function () {\n      Direction.removeClass();\n    });\n\n    /**\n     * Remount component:\n     * - on update to reflect changes in direction value\n     */\n    Events.on('update', function () {\n      Direction.mount();\n    });\n\n    /**\n     * Apply direction class:\n     * - before building to apply class for the first time\n     * - on updating to reapply direction class that may changed\n     */\n    Events.on(['build.before', 'update'], function () {\n      Direction.addClass();\n    });\n\n    return Direction;\n  }\n\n  /**\n   * Reflects value of glide movement.\n   *\n   * @param  {Object} Glide\n   * @param  {Object} Components\n   * @return {Object}\n   */\n  function Rtl (Glide, Components) {\n    return {\n      /**\n       * Negates the passed translate if glide is in RTL option.\n       *\n       * @param  {Number} translate\n       * @return {Number}\n       */\n      modify: function modify(translate) {\n        if (Components.Direction.is('rtl')) {\n          return -translate;\n        }\n\n        return translate;\n      }\n    };\n  }\n\n  /**\n   * Updates glide movement with a `gap` settings.\n   *\n   * @param  {Object} Glide\n   * @param  {Object} Components\n   * @return {Object}\n   */\n  function Gap (Glide, Components) {\n    return {\n      /**\n       * Modifies passed translate value with number in the `gap` settings.\n       *\n       * @param  {Number} translate\n       * @return {Number}\n       */\n      modify: function modify(translate) {\n        return translate + Components.Gaps.value * Glide.index;\n      }\n    };\n  }\n\n  /**\n   * Updates glide movement with width of additional clones width.\n   *\n   * @param  {Object} Glide\n   * @param  {Object} Components\n   * @return {Object}\n   */\n  function Grow (Glide, Components) {\n    return {\n      /**\n       * Adds to the passed translate width of the half of clones.\n       *\n       * @param  {Number} translate\n       * @return {Number}\n       */\n      modify: function modify(translate) {\n        return translate + Components.Clones.grow / 2;\n      }\n    };\n  }\n\n  /**\n   * Updates glide movement with a `peek` settings.\n   *\n   * @param  {Object} Glide\n   * @param  {Object} Components\n   * @return {Object}\n   */\n  function Peeking (Glide, Components) {\n    return {\n      /**\n       * Modifies passed translate value with a `peek` setting.\n       *\n       * @param  {Number} translate\n       * @return {Number}\n       */\n      modify: function modify(translate) {\n        if (Glide.settings.focusAt >= 0) {\n          var peek = Components.Peek.value;\n\n          if (isObject(peek)) {\n            return translate - peek.before;\n          }\n\n          return translate - peek;\n        }\n\n        return translate;\n      }\n    };\n  }\n\n  /**\n   * Updates glide movement with a `focusAt` settings.\n   *\n   * @param  {Object} Glide\n   * @param  {Object} Components\n   * @return {Object}\n   */\n  function Focusing (Glide, Components) {\n    return {\n      /**\n       * Modifies passed translate value with index in the `focusAt` setting.\n       *\n       * @param  {Number} translate\n       * @return {Number}\n       */\n      modify: function modify(translate) {\n        var gap = Components.Gaps.value;\n        var width = Components.Sizes.width;\n        var focusAt = Glide.settings.focusAt;\n        var slideWidth = Components.Sizes.slideWidth;\n\n        if (focusAt === 'center') {\n          return translate - (width / 2 - slideWidth / 2);\n        }\n\n        return translate - slideWidth * focusAt - gap * focusAt;\n      }\n    };\n  }\n\n  /**\n   * Applies diffrent transformers on translate value.\n   *\n   * @param  {Object} Glide\n   * @param  {Object} Components\n   * @return {Object}\n   */\n  function mutator (Glide, Components, Events) {\n    /**\n     * Merge instance transformers with collection of default transformers.\n     * It's important that the Rtl component be last on the list,\n     * so it reflects all previous transformations.\n     *\n     * @type {Array}\n     */\n    var TRANSFORMERS = [Gap, Grow, Peeking, Focusing].concat(Glide._t, [Rtl]);\n\n    return {\n      /**\n       * Piplines translate value with registered transformers.\n       *\n       * @param  {Number} translate\n       * @return {Number}\n       */\n      mutate: function mutate(translate) {\n        for (var i = 0; i < TRANSFORMERS.length; i++) {\n          var transformer = TRANSFORMERS[i];\n\n          if (isFunction(transformer) && isFunction(transformer().modify)) {\n            translate = transformer(Glide, Components, Events).modify(translate);\n          } else {\n            warn('Transformer should be a function that returns an object with `modify()` method');\n          }\n        }\n\n        return translate;\n      }\n    };\n  }\n\n  function Translate (Glide, Components, Events) {\n    var Translate = {\n      /**\n       * Sets value of translate on HTML element.\n       *\n       * @param {Number} value\n       * @return {Void}\n       */\n      set: function set(value) {\n        var transform = mutator(Glide, Components).mutate(value);\n\n        Components.Html.wrapper.style.transform = 'translate3d(' + -1 * transform + 'px, 0px, 0px)';\n      },\n\n\n      /**\n       * Removes value of translate from HTML element.\n       *\n       * @return {Void}\n       */\n      remove: function remove() {\n        Components.Html.wrapper.style.transform = '';\n      }\n    };\n\n    /**\n     * Set new translate value:\n     * - on move to reflect index change\n     * - on updating via API to reflect possible changes in options\n     */\n    Events.on('move', function (context) {\n      var gap = Components.Gaps.value;\n      var length = Components.Sizes.length;\n      var width = Components.Sizes.slideWidth;\n\n      if (Glide.isType('carousel') && Components.Run.isOffset('<')) {\n        Components.Transition.after(function () {\n          Events.emit('translate.jump');\n\n          Translate.set(width * (length - 1));\n        });\n\n        return Translate.set(-width - gap * length);\n      }\n\n      if (Glide.isType('carousel') && Components.Run.isOffset('>')) {\n        Components.Transition.after(function () {\n          Events.emit('translate.jump');\n\n          Translate.set(0);\n        });\n\n        return Translate.set(width * length + gap * length);\n      }\n\n      return Translate.set(context.movement);\n    });\n\n    /**\n     * Remove translate:\n     * - on destroying to bring markup to its inital state\n     */\n    Events.on('destroy', function () {\n      Translate.remove();\n    });\n\n    return Translate;\n  }\n\n  function Transition (Glide, Components, Events) {\n    /**\n     * Holds inactivity status of transition.\n     * When true transition is not applied.\n     *\n     * @type {Boolean}\n     */\n    var disabled = false;\n\n    var Transition = {\n      /**\n       * Composes string of the CSS transition.\n       *\n       * @param {String} property\n       * @return {String}\n       */\n      compose: function compose(property) {\n        var settings = Glide.settings;\n\n        if (!disabled) {\n          return property + ' ' + this.duration + 'ms ' + settings.animationTimingFunc;\n        }\n\n        return property + ' 0ms ' + settings.animationTimingFunc;\n      },\n\n\n      /**\n       * Sets value of transition on HTML element.\n       *\n       * @param {String=} property\n       * @return {Void}\n       */\n      set: function set() {\n        var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform';\n\n        Components.Html.wrapper.style.transition = this.compose(property);\n      },\n\n\n      /**\n       * Removes value of transition from HTML element.\n       *\n       * @return {Void}\n       */\n      remove: function remove() {\n        Components.Html.wrapper.style.transition = '';\n      },\n\n\n      /**\n       * Runs callback after animation.\n       *\n       * @param  {Function} callback\n       * @return {Void}\n       */\n      after: function after(callback) {\n        setTimeout(function () {\n          callback();\n        }, this.duration);\n      },\n\n\n      /**\n       * Enable transition.\n       *\n       * @return {Void}\n       */\n      enable: function enable() {\n        disabled = false;\n\n        this.set();\n      },\n\n\n      /**\n       * Disable transition.\n       *\n       * @return {Void}\n       */\n      disable: function disable() {\n        disabled = true;\n\n        this.set();\n      }\n    };\n\n    define(Transition, 'duration', {\n      /**\n       * Gets duration of the transition based\n       * on currently running animation type.\n       *\n       * @return {Number}\n       */\n      get: function get() {\n        var settings = Glide.settings;\n\n        if (Glide.isType('slider') && Components.Run.offset) {\n          return settings.rewindDuration;\n        }\n\n        return settings.animationDuration;\n      }\n    });\n\n    /**\n     * Set transition `style` value:\n     * - on each moving, because it may be cleared by offset move\n     */\n    Events.on('move', function () {\n      Transition.set();\n    });\n\n    /**\n     * Disable transition:\n     * - before initial build to avoid transitioning from `0` to `startAt` index\n     * - while resizing window and recalculating dimentions\n     * - on jumping from offset transition at start and end edges in `carousel` type\n     */\n    Events.on(['build.before', 'resize', 'translate.jump'], function () {\n      Transition.disable();\n    });\n\n    /**\n     * Enable transition:\n     * - on each running, because it may be disabled by offset move\n     */\n    Events.on('run', function () {\n      Transition.enable();\n    });\n\n    /**\n     * Remove transition:\n     * - on destroying to bring markup to its inital state\n     */\n    Events.on('destroy', function () {\n      Transition.remove();\n    });\n\n    return Transition;\n  }\n\n  /**\n   * Test via a getter in the options object to see\n   * if the passive property is accessed.\n   *\n   * @see https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n   */\n\n  var supportsPassive = false;\n\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        supportsPassive = true;\n      }\n    });\n\n    window.addEventListener('testPassive', null, opts);\n    window.removeEventListener('testPassive', null, opts);\n  } catch (e) {}\n\n  var supportsPassive$1 = supportsPassive;\n\n  var START_EVENTS = ['touchstart', 'mousedown'];\n  var MOVE_EVENTS = ['touchmove', 'mousemove'];\n  var END_EVENTS = ['touchend', 'touchcancel', 'mouseup', 'mouseleave'];\n  var MOUSE_EVENTS = ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\n\n  function Swipe (Glide, Components, Events) {\n    /**\n     * Instance of the binder for DOM Events.\n     *\n     * @type {EventsBinder}\n     */\n    var Binder = new EventsBinder();\n\n    var swipeSin = 0;\n    var swipeStartX = 0;\n    var swipeStartY = 0;\n    var disabled = false;\n    var capture = supportsPassive$1 ? { passive: true } : false;\n\n    var Swipe = {\n      /**\n       * Initializes swipe bindings.\n       *\n       * @return {Void}\n       */\n      mount: function mount() {\n        this.bindSwipeStart();\n      },\n\n\n      /**\n       * Handler for `swipestart` event. Calculates entry points of the user's tap.\n       *\n       * @param {Object} event\n       * @return {Void}\n       */\n      start: function start(event) {\n        if (!disabled && !Glide.disabled) {\n          this.disable();\n\n          var swipe = this.touches(event);\n\n          swipeSin = null;\n          swipeStartX = toInt(swipe.pageX);\n          swipeStartY = toInt(swipe.pageY);\n\n          this.bindSwipeMove();\n          this.bindSwipeEnd();\n\n          Events.emit('swipe.start');\n        }\n      },\n\n\n      /**\n       * Handler for `swipemove` event. Calculates user's tap angle and distance.\n       *\n       * @param {Object} event\n       */\n      move: function move(event) {\n        if (!Glide.disabled) {\n          var _Glide$settings = Glide.settings,\n              touchAngle = _Glide$settings.touchAngle,\n              touchRatio = _Glide$settings.touchRatio,\n              classes = _Glide$settings.classes;\n\n\n          var swipe = this.touches(event);\n\n          var subExSx = toInt(swipe.pageX) - swipeStartX;\n          var subEySy = toInt(swipe.pageY) - swipeStartY;\n          var powEX = Math.abs(subExSx << 2);\n          var powEY = Math.abs(subEySy << 2);\n          var swipeHypotenuse = Math.sqrt(powEX + powEY);\n          var swipeCathetus = Math.sqrt(powEY);\n\n          swipeSin = Math.asin(swipeCathetus / swipeHypotenuse);\n\n          if (swipeSin * 180 / Math.PI < touchAngle) {\n            event.stopPropagation();\n\n            Components.Move.make(subExSx * toFloat(touchRatio));\n\n            Components.Html.root.classList.add(classes.dragging);\n\n            Events.emit('swipe.move');\n          } else {\n            return false;\n          }\n        }\n      },\n\n\n      /**\n       * Handler for `swipeend` event. Finitializes user's tap and decides about glide move.\n       *\n       * @param {Object} event\n       * @return {Void}\n       */\n      end: function end(event) {\n        if (!Glide.disabled) {\n          var settings = Glide.settings;\n\n          var swipe = this.touches(event);\n          var threshold = this.threshold(event);\n\n          var swipeDistance = swipe.pageX - swipeStartX;\n          var swipeDeg = swipeSin * 180 / Math.PI;\n          var steps = Math.round(swipeDistance / Components.Sizes.slideWidth);\n\n          this.enable();\n\n          if (swipeDistance > threshold && swipeDeg < settings.touchAngle) {\n            // While swipe is positive and greater than threshold move backward.\n            if (settings.perTouch) {\n              steps = Math.min(steps, toInt(settings.perTouch));\n            }\n\n            if (Components.Direction.is('rtl')) {\n              steps = -steps;\n            }\n\n            Components.Run.make(Components.Direction.resolve('<' + steps));\n          } else if (swipeDistance < -threshold && swipeDeg < settings.touchAngle) {\n            // While swipe is negative and lower than negative threshold move forward.\n            if (settings.perTouch) {\n              steps = Math.max(steps, -toInt(settings.perTouch));\n            }\n\n            if (Components.Direction.is('rtl')) {\n              steps = -steps;\n            }\n\n            Components.Run.make(Components.Direction.resolve('>' + steps));\n          } else {\n            // While swipe don't reach distance apply previous transform.\n            Components.Move.make();\n          }\n\n          Components.Html.root.classList.remove(settings.classes.dragging);\n\n          this.unbindSwipeMove();\n          this.unbindSwipeEnd();\n\n          Events.emit('swipe.end');\n        }\n      },\n\n\n      /**\n       * Binds swipe's starting event.\n       *\n       * @return {Void}\n       */\n      bindSwipeStart: function bindSwipeStart() {\n        var _this = this;\n\n        var settings = Glide.settings;\n\n        if (settings.swipeThreshold) {\n          Binder.on(START_EVENTS[0], Components.Html.wrapper, function (event) {\n            _this.start(event);\n          }, capture);\n        }\n\n        if (settings.dragThreshold) {\n          Binder.on(START_EVENTS[1], Components.Html.wrapper, function (event) {\n            _this.start(event);\n          }, capture);\n        }\n      },\n\n\n      /**\n       * Unbinds swipe's starting event.\n       *\n       * @return {Void}\n       */\n      unbindSwipeStart: function unbindSwipeStart() {\n        Binder.off(START_EVENTS[0], Components.Html.wrapper, capture);\n        Binder.off(START_EVENTS[1], Components.Html.wrapper, capture);\n      },\n\n\n      /**\n       * Binds swipe's moving event.\n       *\n       * @return {Void}\n       */\n      bindSwipeMove: function bindSwipeMove() {\n        var _this2 = this;\n\n        Binder.on(MOVE_EVENTS, Components.Html.wrapper, throttle(function (event) {\n          _this2.move(event);\n        }, Glide.settings.throttle), capture);\n      },\n\n\n      /**\n       * Unbinds swipe's moving event.\n       *\n       * @return {Void}\n       */\n      unbindSwipeMove: function unbindSwipeMove() {\n        Binder.off(MOVE_EVENTS, Components.Html.wrapper, capture);\n      },\n\n\n      /**\n       * Binds swipe's ending event.\n       *\n       * @return {Void}\n       */\n      bindSwipeEnd: function bindSwipeEnd() {\n        var _this3 = this;\n\n        Binder.on(END_EVENTS, Components.Html.wrapper, function (event) {\n          _this3.end(event);\n        });\n      },\n\n\n      /**\n       * Unbinds swipe's ending event.\n       *\n       * @return {Void}\n       */\n      unbindSwipeEnd: function unbindSwipeEnd() {\n        Binder.off(END_EVENTS, Components.Html.wrapper);\n      },\n\n\n      /**\n       * Normalizes event touches points accorting to different types.\n       *\n       * @param {Object} event\n       */\n      touches: function touches(event) {\n        if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n          return event;\n        }\n\n        return event.touches[0] || event.changedTouches[0];\n      },\n\n\n      /**\n       * Gets value of minimum swipe distance settings based on event type.\n       *\n       * @return {Number}\n       */\n      threshold: function threshold(event) {\n        var settings = Glide.settings;\n\n        if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n          return settings.dragThreshold;\n        }\n\n        return settings.swipeThreshold;\n      },\n\n\n      /**\n       * Enables swipe event.\n       *\n       * @return {self}\n       */\n      enable: function enable() {\n        disabled = false;\n\n        Components.Transition.enable();\n\n        return this;\n      },\n\n\n      /**\n       * Disables swipe event.\n       *\n       * @return {self}\n       */\n      disable: function disable() {\n        disabled = true;\n\n        Components.Transition.disable();\n\n        return this;\n      }\n    };\n\n    /**\n     * Add component class:\n     * - after initial building\n     */\n    Events.on('build.after', function () {\n      Components.Html.root.classList.add(Glide.settings.classes.swipeable);\n    });\n\n    /**\n     * Remove swiping bindings:\n     * - on destroying, to remove added EventListeners\n     */\n    Events.on('destroy', function () {\n      Swipe.unbindSwipeStart();\n      Swipe.unbindSwipeMove();\n      Swipe.unbindSwipeEnd();\n      Binder.destroy();\n    });\n\n    return Swipe;\n  }\n\n  function Images (Glide, Components, Events) {\n    /**\n     * Instance of the binder for DOM Events.\n     *\n     * @type {EventsBinder}\n     */\n    var Binder = new EventsBinder();\n\n    var Images = {\n      /**\n       * Binds listener to glide wrapper.\n       *\n       * @return {Void}\n       */\n      mount: function mount() {\n        this.bind();\n      },\n\n\n      /**\n       * Binds `dragstart` event on wrapper to prevent dragging images.\n       *\n       * @return {Void}\n       */\n      bind: function bind() {\n        Binder.on('dragstart', Components.Html.wrapper, this.dragstart);\n      },\n\n\n      /**\n       * Unbinds `dragstart` event on wrapper.\n       *\n       * @return {Void}\n       */\n      unbind: function unbind() {\n        Binder.off('dragstart', Components.Html.wrapper);\n      },\n\n\n      /**\n       * Event handler. Prevents dragging.\n       *\n       * @return {Void}\n       */\n      dragstart: function dragstart(event) {\n        event.preventDefault();\n      }\n    };\n\n    /**\n     * Remove bindings from images:\n     * - on destroying, to remove added EventListeners\n     */\n    Events.on('destroy', function () {\n      Images.unbind();\n      Binder.destroy();\n    });\n\n    return Images;\n  }\n\n  function Anchors (Glide, Components, Events) {\n    /**\n     * Instance of the binder for DOM Events.\n     *\n     * @type {EventsBinder}\n     */\n    var Binder = new EventsBinder();\n\n    /**\n     * Holds detaching status of anchors.\n     * Prevents detaching of already detached anchors.\n     *\n     * @private\n     * @type {Boolean}\n     */\n    var detached = false;\n\n    /**\n     * Holds preventing status of anchors.\n     * If `true` redirection after click will be disabled.\n     *\n     * @private\n     * @type {Boolean}\n     */\n    var prevented = false;\n\n    var Anchors = {\n      /**\n       * Setups a initial state of anchors component.\n       *\n       * @returns {Void}\n       */\n      mount: function mount() {\n        /**\n         * Holds collection of anchors elements.\n         *\n         * @private\n         * @type {HTMLCollection}\n         */\n        this._a = Components.Html.wrapper.querySelectorAll('a');\n\n        this.bind();\n      },\n\n\n      /**\n       * Binds events to anchors inside a track.\n       *\n       * @return {Void}\n       */\n      bind: function bind() {\n        Binder.on('click', Components.Html.wrapper, this.click);\n      },\n\n\n      /**\n       * Unbinds events attached to anchors inside a track.\n       *\n       * @return {Void}\n       */\n      unbind: function unbind() {\n        Binder.off('click', Components.Html.wrapper);\n      },\n\n\n      /**\n       * Handler for click event. Prevents clicks when glide is in `prevent` status.\n       *\n       * @param  {Object} event\n       * @return {Void}\n       */\n      click: function click(event) {\n        if (prevented) {\n          event.stopPropagation();\n          event.preventDefault();\n        }\n      },\n\n\n      /**\n       * Detaches anchors click event inside glide.\n       *\n       * @return {self}\n       */\n      detach: function detach() {\n        prevented = true;\n\n        if (!detached) {\n          for (var i = 0; i < this.items.length; i++) {\n            this.items[i].draggable = false;\n\n            this.items[i].setAttribute('data-href', this.items[i].getAttribute('href'));\n\n            this.items[i].removeAttribute('href');\n          }\n\n          detached = true;\n        }\n\n        return this;\n      },\n\n\n      /**\n       * Attaches anchors click events inside glide.\n       *\n       * @return {self}\n       */\n      attach: function attach() {\n        prevented = false;\n\n        if (detached) {\n          for (var i = 0; i < this.items.length; i++) {\n            this.items[i].draggable = true;\n\n            this.items[i].setAttribute('href', this.items[i].getAttribute('data-href'));\n          }\n\n          detached = false;\n        }\n\n        return this;\n      }\n    };\n\n    define(Anchors, 'items', {\n      /**\n       * Gets collection of the arrows HTML elements.\n       *\n       * @return {HTMLElement[]}\n       */\n      get: function get() {\n        return Anchors._a;\n      }\n    });\n\n    /**\n     * Detach anchors inside slides:\n     * - on swiping, so they won't redirect to its `href` attributes\n     */\n    Events.on('swipe.move', function () {\n      Anchors.detach();\n    });\n\n    /**\n     * Attach anchors inside slides:\n     * - after swiping and transitions ends, so they can redirect after click again\n     */\n    Events.on('swipe.end', function () {\n      Components.Transition.after(function () {\n        Anchors.attach();\n      });\n    });\n\n    /**\n     * Unbind anchors inside slides:\n     * - on destroying, to bring anchors to its initial state\n     */\n    Events.on('destroy', function () {\n      Anchors.attach();\n      Anchors.unbind();\n      Binder.destroy();\n    });\n\n    return Anchors;\n  }\n\n  var NAV_SELECTOR = '[data-glide-el=\"controls[nav]\"]';\n  var CONTROLS_SELECTOR = '[data-glide-el^=\"controls\"]';\n\n  function Controls (Glide, Components, Events) {\n    /**\n     * Instance of the binder for DOM Events.\n     *\n     * @type {EventsBinder}\n     */\n    var Binder = new EventsBinder();\n\n    var capture = supportsPassive$1 ? { passive: true } : false;\n\n    var Controls = {\n      /**\n       * Inits arrows. Binds events listeners\n       * to the arrows HTML elements.\n       *\n       * @return {Void}\n       */\n      mount: function mount() {\n        /**\n         * Collection of navigation HTML elements.\n         *\n         * @private\n         * @type {HTMLCollection}\n         */\n        this._n = Components.Html.root.querySelectorAll(NAV_SELECTOR);\n\n        /**\n         * Collection of controls HTML elements.\n         *\n         * @private\n         * @type {HTMLCollection}\n         */\n        this._c = Components.Html.root.querySelectorAll(CONTROLS_SELECTOR);\n\n        this.addBindings();\n      },\n\n\n      /**\n       * Sets active class to current slide.\n       *\n       * @return {Void}\n       */\n      setActive: function setActive() {\n        for (var i = 0; i < this._n.length; i++) {\n          this.addClass(this._n[i].children);\n        }\n      },\n\n\n      /**\n       * Removes active class to current slide.\n       *\n       * @return {Void}\n       */\n      removeActive: function removeActive() {\n        for (var i = 0; i < this._n.length; i++) {\n          this.removeClass(this._n[i].children);\n        }\n      },\n\n\n      /**\n       * Toggles active class on items inside navigation.\n       *\n       * @param  {HTMLElement} controls\n       * @return {Void}\n       */\n      addClass: function addClass(controls) {\n        var settings = Glide.settings;\n        var item = controls[Glide.index];\n\n        if (item) {\n          item.classList.add(settings.classes.activeNav);\n\n          siblings(item).forEach(function (sibling) {\n            sibling.classList.remove(settings.classes.activeNav);\n          });\n        }\n      },\n\n\n      /**\n       * Removes active class from active control.\n       *\n       * @param  {HTMLElement} controls\n       * @return {Void}\n       */\n      removeClass: function removeClass(controls) {\n        var item = controls[Glide.index];\n\n        if (item) {\n          item.classList.remove(Glide.settings.classes.activeNav);\n        }\n      },\n\n\n      /**\n       * Adds handles to the each group of controls.\n       *\n       * @return {Void}\n       */\n      addBindings: function addBindings() {\n        for (var i = 0; i < this._c.length; i++) {\n          this.bind(this._c[i].children);\n        }\n      },\n\n\n      /**\n       * Removes handles from the each group of controls.\n       *\n       * @return {Void}\n       */\n      removeBindings: function removeBindings() {\n        for (var i = 0; i < this._c.length; i++) {\n          this.unbind(this._c[i].children);\n        }\n      },\n\n\n      /**\n       * Binds events to arrows HTML elements.\n       *\n       * @param {HTMLCollection} elements\n       * @return {Void}\n       */\n      bind: function bind(elements) {\n        for (var i = 0; i < elements.length; i++) {\n          Binder.on('click', elements[i], this.click);\n          Binder.on('touchstart', elements[i], this.click, capture);\n        }\n      },\n\n\n      /**\n       * Unbinds events binded to the arrows HTML elements.\n       *\n       * @param {HTMLCollection} elements\n       * @return {Void}\n       */\n      unbind: function unbind(elements) {\n        for (var i = 0; i < elements.length; i++) {\n          Binder.off(['click', 'touchstart'], elements[i]);\n        }\n      },\n\n\n      /**\n       * Handles `click` event on the arrows HTML elements.\n       * Moves slider in driection precised in\n       * `data-glide-dir` attribute.\n       *\n       * @param {Object} event\n       * @return {Void}\n       */\n      click: function click(event) {\n        event.preventDefault();\n\n        Components.Run.make(Components.Direction.resolve(event.currentTarget.getAttribute('data-glide-dir')));\n      }\n    };\n\n    define(Controls, 'items', {\n      /**\n       * Gets collection of the controls HTML elements.\n       *\n       * @return {HTMLElement[]}\n       */\n      get: function get() {\n        return Controls._c;\n      }\n    });\n\n    /**\n     * Swap active class of current navigation item:\n     * - after mounting to set it to initial index\n     * - after each move to the new index\n     */\n    Events.on(['mount.after', 'move.after'], function () {\n      Controls.setActive();\n    });\n\n    /**\n     * Remove bindings and HTML Classes:\n     * - on destroying, to bring markup to its initial state\n     */\n    Events.on('destroy', function () {\n      Controls.removeBindings();\n      Controls.removeActive();\n      Binder.destroy();\n    });\n\n    return Controls;\n  }\n\n  function Keyboard (Glide, Components, Events) {\n    /**\n     * Instance of the binder for DOM Events.\n     *\n     * @type {EventsBinder}\n     */\n    var Binder = new EventsBinder();\n\n    var Keyboard = {\n      /**\n       * Binds keyboard events on component mount.\n       *\n       * @return {Void}\n       */\n      mount: function mount() {\n        if (Glide.settings.keyboard) {\n          this.bind();\n        }\n      },\n\n\n      /**\n       * Adds keyboard press events.\n       *\n       * @return {Void}\n       */\n      bind: function bind() {\n        Binder.on('keyup', document, this.press);\n      },\n\n\n      /**\n       * Removes keyboard press events.\n       *\n       * @return {Void}\n       */\n      unbind: function unbind() {\n        Binder.off('keyup', document);\n      },\n\n\n      /**\n       * Handles keyboard's arrows press and moving glide foward and backward.\n       *\n       * @param  {Object} event\n       * @return {Void}\n       */\n      press: function press(event) {\n        if (event.keyCode === 39) {\n          Components.Run.make(Components.Direction.resolve('>'));\n        }\n\n        if (event.keyCode === 37) {\n          Components.Run.make(Components.Direction.resolve('<'));\n        }\n      }\n    };\n\n    /**\n     * Remove bindings from keyboard:\n     * - on destroying to remove added events\n     * - on updating to remove events before remounting\n     */\n    Events.on(['destroy', 'update'], function () {\n      Keyboard.unbind();\n    });\n\n    /**\n     * Remount component\n     * - on updating to reflect potential changes in settings\n     */\n    Events.on('update', function () {\n      Keyboard.mount();\n    });\n\n    /**\n     * Destroy binder:\n     * - on destroying to remove listeners\n     */\n    Events.on('destroy', function () {\n      Binder.destroy();\n    });\n\n    return Keyboard;\n  }\n\n  function Autoplay (Glide, Components, Events) {\n    /**\n     * Instance of the binder for DOM Events.\n     *\n     * @type {EventsBinder}\n     */\n    var Binder = new EventsBinder();\n\n    var Autoplay = {\n      /**\n       * Initializes autoplaying and events.\n       *\n       * @return {Void}\n       */\n      mount: function mount() {\n        this.start();\n\n        if (Glide.settings.hoverpause) {\n          this.bind();\n        }\n      },\n\n\n      /**\n       * Starts autoplaying in configured interval.\n       *\n       * @param {Boolean|Number} force Run autoplaying with passed interval regardless of `autoplay` settings\n       * @return {Void}\n       */\n      start: function start() {\n        var _this = this;\n\n        if (Glide.settings.autoplay) {\n          if (isUndefined(this._i)) {\n            this._i = setInterval(function () {\n              _this.stop();\n\n              Components.Run.make('>');\n\n              _this.start();\n            }, this.time);\n          }\n        }\n      },\n\n\n      /**\n       * Stops autorunning of the glide.\n       *\n       * @return {Void}\n       */\n      stop: function stop() {\n        this._i = clearInterval(this._i);\n      },\n\n\n      /**\n       * Stops autoplaying while mouse is over glide's area.\n       *\n       * @return {Void}\n       */\n      bind: function bind() {\n        var _this2 = this;\n\n        Binder.on('mouseover', Components.Html.root, function () {\n          _this2.stop();\n        });\n\n        Binder.on('mouseout', Components.Html.root, function () {\n          _this2.start();\n        });\n      },\n\n\n      /**\n       * Unbind mouseover events.\n       *\n       * @returns {Void}\n       */\n      unbind: function unbind() {\n        Binder.off(['mouseover', 'mouseout'], Components.Html.root);\n      }\n    };\n\n    define(Autoplay, 'time', {\n      /**\n       * Gets time period value for the autoplay interval. Prioritizes\n       * times in `data-glide-autoplay` attrubutes over options.\n       *\n       * @return {Number}\n       */\n      get: function get() {\n        var autoplay = Components.Html.slides[Glide.index].getAttribute('data-glide-autoplay');\n\n        if (autoplay) {\n          return toInt(autoplay);\n        }\n\n        return toInt(Glide.settings.autoplay);\n      }\n    });\n\n    /**\n     * Stop autoplaying and unbind events:\n     * - on destroying, to clear defined interval\n     * - on updating via API to reset interval that may changed\n     */\n    Events.on(['destroy', 'update'], function () {\n      Autoplay.unbind();\n    });\n\n    /**\n     * Stop autoplaying:\n     * - before each run, to restart autoplaying\n     * - on pausing via API\n     * - on destroying, to clear defined interval\n     * - while starting a swipe\n     * - on updating via API to reset interval that may changed\n     */\n    Events.on(['run.before', 'pause', 'destroy', 'swipe.start', 'update'], function () {\n      Autoplay.stop();\n    });\n\n    /**\n     * Start autoplaying:\n     * - after each run, to restart autoplaying\n     * - on playing via API\n     * - while ending a swipe\n     */\n    Events.on(['run.after', 'play', 'swipe.end'], function () {\n      Autoplay.start();\n    });\n\n    /**\n     * Remount autoplaying:\n     * - on updating via API to reset interval that may changed\n     */\n    Events.on('update', function () {\n      Autoplay.mount();\n    });\n\n    /**\n     * Destroy a binder:\n     * - on destroying glide instance to clearup listeners\n     */\n    Events.on('destroy', function () {\n      Binder.destroy();\n    });\n\n    return Autoplay;\n  }\n\n  /**\n   * Sorts keys of breakpoint object so they will be ordered from lower to bigger.\n   *\n   * @param {Object} points\n   * @returns {Object}\n   */\n  function sortBreakpoints(points) {\n    if (isObject(points)) {\n      return sortKeys(points);\n    } else {\n      warn('Breakpoints option must be an object');\n    }\n\n    return {};\n  }\n\n  function Breakpoints (Glide, Components, Events) {\n    /**\n     * Instance of the binder for DOM Events.\n     *\n     * @type {EventsBinder}\n     */\n    var Binder = new EventsBinder();\n\n    /**\n     * Holds reference to settings.\n     *\n     * @type {Object}\n     */\n    var settings = Glide.settings;\n\n    /**\n     * Holds reference to breakpoints object in settings. Sorts breakpoints\n     * from smaller to larger. It is required in order to proper\n     * matching currently active breakpoint settings.\n     *\n     * @type {Object}\n     */\n    var points = sortBreakpoints(settings.breakpoints);\n\n    /**\n     * Cache initial settings before overwritting.\n     *\n     * @type {Object}\n     */\n    var defaults = _extends({}, settings);\n\n    var Breakpoints = {\n      /**\n       * Matches settings for currectly matching media breakpoint.\n       *\n       * @param {Object} points\n       * @returns {Object}\n       */\n      match: function match(points) {\n        if (typeof window.matchMedia !== 'undefined') {\n          for (var point in points) {\n            if (points.hasOwnProperty(point)) {\n              if (window.matchMedia('(max-width: ' + point + 'px)').matches) {\n                return points[point];\n              }\n            }\n          }\n        }\n\n        return defaults;\n      }\n    };\n\n    /**\n     * Overwrite instance settings with currently matching breakpoint settings.\n     * This happens right after component initialization.\n     */\n    _extends(settings, Breakpoints.match(points));\n\n    /**\n     * Update glide with settings of matched brekpoint:\n     * - window resize to update slider\n     */\n    Binder.on('resize', window, throttle(function () {\n      Glide.settings = mergeOptions(settings, Breakpoints.match(points));\n    }, Glide.settings.throttle));\n\n    /**\n     * Resort and update default settings:\n     * - on reinit via API, so breakpoint matching will be performed with options\n     */\n    Events.on('update', function () {\n      points = sortBreakpoints(points);\n\n      defaults = _extends({}, settings);\n    });\n\n    /**\n     * Unbind resize listener:\n     * - on destroying, to bring markup to its initial state\n     */\n    Events.on('destroy', function () {\n      Binder.off('resize', window);\n    });\n\n    return Breakpoints;\n  }\n\n  var COMPONENTS = {\n    // Required\n    Html: Html,\n    Translate: Translate,\n    Transition: Transition,\n    Direction: Direction,\n    Peek: Peek,\n    Sizes: Sizes,\n    Gaps: Gaps,\n    Move: Move,\n    Clones: Clones,\n    Resize: Resize,\n    Build: Build,\n    Run: Run,\n\n    // Optional\n    Swipe: Swipe,\n    Images: Images,\n    Anchors: Anchors,\n    Controls: Controls,\n    Keyboard: Keyboard,\n    Autoplay: Autoplay,\n    Breakpoints: Breakpoints\n  };\n\n  var Glide$1 = function (_Core) {\n    inherits(Glide$$1, _Core);\n\n    function Glide$$1() {\n      classCallCheck(this, Glide$$1);\n      return possibleConstructorReturn(this, (Glide$$1.__proto__ || Object.getPrototypeOf(Glide$$1)).apply(this, arguments));\n    }\n\n    createClass(Glide$$1, [{\n      key: 'mount',\n      value: function mount() {\n        var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        return get(Glide$$1.prototype.__proto__ || Object.getPrototypeOf(Glide$$1.prototype), 'mount', this).call(this, _extends({}, COMPONENTS, extensions));\n      }\n    }]);\n    return Glide$$1;\n  }(Glide);\n\n  return Glide$1;\n\n})));\n\n},{}]},{},[1]);\n"]}